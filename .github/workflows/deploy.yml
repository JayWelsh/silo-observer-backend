name: Deploy to DigitalOcean Droplet
'on':
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.USERNAME}}
          passphrase: ${{secrets.KEY_PASSPHRASE}}
          key: ${{secrets.KEY}}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            rm -rf silo-observer
            mkdir silo-observer
            cd silo-observer
            git clone https://github.com/JayWelsh/silo-observer-backend.git
            cd silo-observer-backend
            npm i -g dotenv
            npm i -g pm2
            yarn install
            touch .env
            echo DISCORD_BOT_CLIENT_ID="${{secrets.DISCORD_BOT_CLIENT_ID}}" >> .env
            echo DISCORD_BOT_TOKEN="${{secrets.DISCORD_BOT_TOKEN}}" >> .env
            echo DB_HOST=\"'${{secrets.DB_HOST}}'\" >> .env
            echo DB_PORT=\"'${{secrets.DB_PORT}}'\" >> .env
            echo DB_NAME=\"'${{secrets.DB_NAME}}'\" >> .env
            echo DB_USER=\"'${{secrets.DB_USER}}'\" >> .env
            echo DB_PASS=\"'${{secrets.DB_PASS}}'\" >> .env
            echo ALCHEMY_API_KEY=\"'${{secrets.ALCHEMY_API_KEY}}'\" >> .env
            echo ALCHEMY_API_KEY_ARBITRUM=\"'${{secrets.ALCHEMY_API_KEY_ARBITRUM}}'\" >> .env
            echo ALCHEMY_API_KEY_OPTIMISM=\"'${{secrets.ALCHEMY_API_KEY_OPTIMISM}}'\" >> .env
            echo COINGECKO_API_KEY=\"'${{secrets.COINGECKO_API_KEY}}'\" >> .env
            echo THE_GRAPH_API_KEY=\"'${{secrets.THE_GRAPH_API_KEY}}'\" >> .env
            yarn run build
            yarn run knex migrate:latest
            pm2 startOrReload ./config/ecosystem.json
            echo 'Deployment to digital ocean finished'